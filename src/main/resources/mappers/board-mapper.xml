<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">

  <!-- Board DTO 매핑 -->
  <resultMap id="boardResultMap" type="BoardDto">
    <result column="board_no" property="boardNo" />
    <result column="board_type_no" property="boardTypeNo" />
    <result column="board_dept" property="boardDept" /> 
    <result column="board_title" property="boardTitle" />
    <result column="board_content" property="boardContent" />
    <result column="board_count" property="boardCount" />
    <result column="emp_no" property="empNo" />	
    <result column="create_date" property="createDate" />	
    <result column="modifier" property="modifier" />	
    <result column="modify_date" property="modifyDate" />	
    <result column="use_yn" property="useYN" />	
    <result column="emp_name" property="empName" />	
    <result column="dept_name" property="deptName" />	
    <result column="boardt_name" property="boardtName"/>
    <result column="board_check" property="boardCheck"/>
    <result column="attach_count" property="attachCount" />	
    
    <collection resultMap="boardFileResultMap" property="boardList" />
  </resultMap>

  <!-- BoardFile DTO 매핑 -->
  <resultMap id="boardFileResultMap" type="BoardFileDto">
    <result column="BOARDFILE_NO" property="boardFileNo"/>
    <result column="FILE_PATH" property="filePath"/>
    <result column="FILESYSTEM_NAME" property="fileSystemName"/>
    <result column="ORIGINAL_NAME" property="originalName"/>
    <result column="UPLOAD_DATE" property="uploadDate"/>
    <result column="REF_TYPE" property="refType"/>
    <result column="REF_NO" property="refNo"/>
    <result column="CREATER" property="creater"/>
    <result column="CREATE_DATE" property="createDate"/>
    <result column="MODIFIER" property="modifier"/>
    <result column="MODIFY_DATE" property="modifyDate"/>
    <result column="USE_YN" property="useYN"/>
  </resultMap>	

	<resultMap id="ReplyResultMap" type="ReplyDto">
    <result column="REPLY_NO" property="replyNo" />
    <result column="REPLY_CONTENT" property="replyContent" />
    <result column="REF_BNO" property="refBno" /> 
    <result column="UPR_REPLY_NO" property="uprReplyNo" />
    <result column="STATUS" property="status" />
    <result column="EMP_NO" property="empNo" />
    <result column="create_date" property="createDate" />	
    <result column="MODIFIER" property="modifier" />	
    <result column="MODIFY_DATE" property="modifyDate" />	
    <result column="USE_YN" property="useYN" />	
    <result column="board_no" property="boardNo" />	
    <result column="emp_Name" property="empName" />	
    <result column="reply_no" property="replyNo" />	
    <result column="good_reply" property="goodReply" />	
    <result column="creater" property="creater" />	
    
  </resultMap>
  
  <resultMap id="GoodResultMap" type="GoodDto">
    <result column="REPLY_NO" property="replyNo" />
    <result column="GOOD_REPLY" property="goodReply" />
    <result column="CREATER" property="creater" /> 
    <result column="CREATE_DATE" property="createDate" />
    <result column="MODIFIER" property="modifier" />
    <result column="MODIFY_DATE" property="modifyDate" />
    <result column="emp_name" property="empName" />	
  </resultMap>

  <!-- 게시글 목록 갯수 -->
  <select id="selectBoardListCount" resultType="_int">
    SELECT COUNT(*) 
    FROM tbl_board b 
    WHERE b.USE_YN = 'Y'
    and board_type_no = #{board_type_no}
  </select>

  <!-- 게시글 목록 조회 -->
<select id="selectBoardList" resultMap="boardResultMap">
  <![CDATA[
    WITH ranked_boards AS (
        SELECT 
            b.board_check,
            b.board_no, 
            b.board_type_no,
            b.board_dept, 
            b.board_title, 
            (SELECT emp_name
             FROM tbl_employee e
             WHERE e.emp_no = b.emp_no) AS emp_name,
            TO_CHAR(b.create_date, 'YYYY-MM-DD') AS create_date, 
            b.board_Count, 
            ( 
                SELECT COUNT(*) 
                FROM tbl_boardfile s
                WHERE s.ref_type = 'A' 
                AND s.ref_no = b.board_no
            ) AS attach_count,
            ROW_NUMBER() OVER (PARTITION BY b.board_check ORDER BY b.create_date DESC, b.board_no DESC) AS row_num
        FROM tbl_board b
        WHERE b.USE_YN = 'Y'
          AND b.board_type_no = #{board_type_no}
    )
    SELECT 
        board_check,
        board_no, 
        board_type_no,
        board_dept, 
        board_title, 
        emp_name,
        create_date,
        board_Count,
        attach_count
    FROM ranked_boards
    WHERE (board_check = 'N,on' AND row_num <= 3) 
       OR board_check != 'N,on'
    ORDER BY 
        CASE 
            WHEN board_check = 'N,on' THEN 1
            ELSE 2
        END,
        board_no DESC
  ]]>
</select>

<select id="getBoardTypeName" resultMap="boardResultMap">
select boardt_name
from tbl_boardtype
where board_type_no = #{board_type_no}

</select>

  <!-- 검색된 게시글 갯수 -->
  <select id="selectSearchListCount" resultType="_int">
    SELECT COUNT(*) 
    FROM tbl_board b 
    LEFT JOIN tbl_employee e ON e.emp_no = b.modifier 
    WHERE b.USE_YN = 'Y' 
      AND ${condition} LIKE '%' || #{keyword} || '%'
  </select>

  <!-- 검색된 게시글 목록 조회 -->
  <select id="selectSearchList" resultMap="boardResultMap">
   <![CDATA[
    WITH ranked_boards AS (
        SELECT 
            b.board_check,
            b.board_no, 
            (select board_type_no
            from tbl_boardtype
            where board_type_no = #{board_type_no}),
            b.board_type_no,
            b.board_dept, 
            b.board_title, 
            (SELECT emp_name
             FROM tbl_employee e
             WHERE e.emp_no = b.emp_no) AS emp_name,
            TO_CHAR(b.create_date, 'YYYY-MM-DD') AS create_date, 
            b.board_Count, 
            ( 
                SELECT COUNT(*) 
                FROM tbl_boardfile s
                WHERE s.ref_type = 'A' 
                AND s.ref_no = b.board_no
            ) AS attach_count,
            ROW_NUMBER() OVER (PARTITION BY b.board_check ORDER BY b.create_date DESC, b.board_no DESC) AS row_num
        FROM tbl_board b
        WHERE b.USE_YN = 'Y'
        AND ${condition} LIKE '%' || #{keyword} || '%'
  
    )
    SELECT 
        board_check,
        board_no, 
        board_type_no,
        board_dept, 
        board_title, 
        emp_name,
        create_date,
        board_Count,
        attach_count
    FROM ranked_boards
    WHERE (board_check = 'N,on' AND row_num <= 5) 
       OR board_check != 'N,on'
    ORDER BY 
        CASE 
            WHEN board_check = 'N,on' THEN 1
            ELSE 2
        END,
        board_no DESC
]]>

  </select>
  
  <insert id="insertBoard">
		insert
			into tbl_board
			(
				board_no
			,	board_type_no
			, board_dept
			,	board_title
			,	board_content
			,	emp_no
			, create_Date
			, use_YN  
			, board_check
			)
			
			values
			(
				board_no_seq.nextval
			, #{ boardTypeNo }
			, #{ boardDept }
			, #{ boardTitle }
			, #{ boardContent }
			, #{ empNo }
			, SYSDATE
			, 'Y'
			, #{ boardCheck }
			)
			
			
	</insert>
	
	<select id="deptName" resultMap="boardResultMap">

		SELECT dept_name
			FROM tbl_department
			WHERE dept_name LIKE '%부' OR dept_name LIKE '지점'
	
	</select>
	
	<select id="boardtName" resultMap="boardResultMap">
		select board_type_no, boardt_name
        from tbl_boardtype
         where USE_YN = 'Y'
        and board_type_no = 1001
	</select>
	
	
	
	<insert id ="insertAttach">
		insert
			into tbl_boardfile
			(
				BOARDFILE_NO
			,	FILE_PATH
			,	FILESYSTEM_NAME
			,	ORIGINAL_NAME
			,	UPLOAD_DATE
			,	REF_TYPE
			,	REF_NO
			,	CREATER
			,	CREATE_DATE
			,	MODIFIER
			,	MODIFY_DATE
			,	USE_YN
			
			)
			values
			(
				boardfile_no_seq.nextval
			, #{filePath}
			, #{fileSystemName}
			, #{originalName}
			, SYSDATE			
			, #{refType}
			
			<choose>
				<when test="refNo == 0">
						, board_no_seq.currval	
				</when>
				<otherwise>
						, #{refNo}			
				</otherwise>
			</choose>
			
			, NULL
			, SYSDATE
			, NULL
			, NULL
			, 'Y'
			
			)
	</insert>
	
	
  <update id="updateIncreaseCount">
	update
				tbl_board
		set board_count = COALESCE(board_count, 0) + 1
	where board_no = #{boardNo}
		and use_YN = 'Y'
	
	</update>
  
  
  	<select id="selectBoard" resultMap="boardResultMap">

			SELECT 
		    b.board_no,
		    b.board_title,
		    b.board_content,
		    b.emp_no,
		    b.board_count,
        b.board_dept,
        b.board_check,
		    e.emp_name, 
		    TO_CHAR(b.create_date, 'YYYY-MM-DD') AS create_date,
		    c.BOARDFILE_NO,
		    c.file_path,
		    c.filesystem_name,
		    c.original_name,
        b.board_type_no
		FROM tbl_board b
		JOIN tbl_employee e ON b.emp_no = e.emp_no
		LEFT JOIN tbl_boardfile c ON c.ref_type = 'A' AND c.ref_no = b.board_no
		  left join tbl_boardtype d on d.boardt_name =  b.board_type_no
		WHERE b.use_YN = 'Y'
		  AND b.board_no = #{boardNo}
			
			
	</select>
  
  <select id="selectDelAttach" resultMap="boardFileResultMap">
		
		select
				 	file_path
				, filesystem_name
			from tbl_boardfile
		 <where>
		 	<foreach item="no" collection="array"
				open="boardfile_no in (" separator=","	close=")">
		 		#{no}
		 	</foreach>
		 </where>
	
	</select>
	
	<update id="updateBoard">
		update
					 tbl_board
				set 
						board_type_no = #{boardTypeNo}
					,	board_dept = #{boardDept}
					,	board_title   = #{boardTitle}
		  		, board_content = #{boardContent}
		  		, board_check = #{boardCheck}
		 where board_no = #{boardNo}
	
	</update>
	
	<delete id="deleteAttach">
	
	delete
		from tbl_boardfile
	 <where>
		 	<foreach item="no" collection="array"
				open="boardfile_no in (" separator=","	close=")">
		 		#{no}
		 	</foreach>
		 </where>
	
	</delete>
  
  <select id="replycount" resultType="_int">
   SELECT
  			 COUNT(*)
    FROM 
    		TBL_REPLY r
    join tbl_board b on b.board_no = r.ref_bno
    WHERE r.ref_bno=  #{boardNo}
   		and r.use_YN = 'Y'
  
  
  
  </select>
  
  <select id="replylist" resultMap="ReplyResultMap">
  
	 SELECT
		    r.reply_no,
		    r.reply_content,
		    r.ref_bno,
		    r.status,
		    r.emp_no,
		    r.create_date,
		    r.use_yn,
		    b.board_no,
		    r.status AS reply_status,
		    e.emp_Name,
		    r.upr_reply_no,
		    g.reply_no,
        g.good_reply,
        g.creater,
		    parent.reply_content AS parent_reply_content,
		    parent.reply_no AS parent_reply_no
		    
		FROM
		    tbl_reply r
		JOIN tbl_board b ON b.board_no = r.ref_bno
		LEFT JOIN tbl_employee e ON e.emp_no = r.emp_no
		LEFT JOIN tbl_reply parent ON parent.reply_no = r.upr_reply_no
	  left join tbl_good g on r.reply_no = g.reply_no
		WHERE
		    b.board_no = #{boardNo}
		    and r.use_yn = 'Y'
		ORDER BY
		CASE 
		    WHEN r.upr_reply_no IS NULL THEN TO_NUMBER(r.reply_no) 
		    ELSE TO_NUMBER(r.upr_reply_no) 
		END ASC,
		r.create_date ASC
</select>


  
  <insert id="insertReply">
		insert
		  into tbl_reply
		  (
		    reply_no
		  , reply_content
		  , ref_bno
		  , upr_reply_no
		  , status
		  , emp_no
		  , create_date
		  , use_yn
		  )
		  values
		  (
		    reply_no_seq.nextval
		  , #{replyContent}
		  , #{refBno}
		  , #{uprReplyNo}
		  , 'A'
		  , #{empNo}
		  , SYSDATE
		  , 'Y'
		  )
		  
	</insert>
	
	<insert id="insertGood"> 
	insert 
		  into tbl_good
		  (
		     reply_no
		    , good_reply
		    , creater
		  )
			values
			(
					#{replyNo}
				, 'Y'
				, #{empName}
			)
			
	</insert>
	
	<update id="updateGood">
		update
					 tbl_good
				set 
						good_reply = #{goodReply}
		 where reply_no = #{replyNo}
	</update>
		
  <select id="checkGoodStatus" parameterType="GoodDto" resultType="int">
        SELECT COUNT(*) 
        FROM tbl_good
        WHERE reply_no = #{replyNo} AND creater = #{empName} AND good_reply = 'Y'
    </select>
	
		<update id="deleteBoard">
		update
		       tbl_board
		   set use_Yn = 'N'
		 where board_no = #{boardNo}
	</update>
  
	<update id="deleteReplyCompletely">
    UPDATE tbl_reply
	    SET use_Yn = 'N'
    WHERE reply_no = #{replyNo}
	    OR upr_reply_no = #{replyNo}
	</update>
  
  <update id="replyUpdate">
			update tbl_reply
			   set reply_content = #{replyContent}
  		 where reply_no = #{replyNo}
  
  </update>
  
<select id="selectmainBoardList" resultMap="boardResultMap">
	   <![CDATA[
        SELECT * FROM (
            SELECT 
            	  board_no,
                board_dept, 
                board_title, 
                (SELECT emp_name 
                 FROM tbl_employee 
                 WHERE emp_no = tbl_board.emp_no) AS emp_name,  
                 TO_CHAR(create_date, 'YYYY-MM-DD') AS create_date
            FROM tbl_board
           where board_type_no = 1001
             and board_check = 'N,on'
             and USE_YN = 'Y'
            ORDER BY board_no DESC
        )
        WHERE ROWNUM <= 3
    ]]>
</select>


</mapper>
